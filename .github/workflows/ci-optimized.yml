name: CI

on:
  push:
    branches:
      - main
      - "feat/**"
      - "fix/**"
  pull_request:
    branches:
      - main

permissions:
  contents: read
  id-token: write # For OIDC authentication

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  BUN_VERSION: "1.2.20"
  NODE_VERSION: "20"
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}

jobs:
  # Single setup job that other jobs depend on
  setup:
    name: Setup & Cache
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache.outputs.cache-hit }}
      deps-cache-key: ${{ steps.deps-cache-key.outputs.key }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2 # For proper change detection

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Generate cache key
        id: deps-cache-key
        run: |
          echo "key=deps-${{ runner.os }}-bun-${{ env.BUN_VERSION }}-${{ hashFiles('**/bun.lock') }}" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
            packages/*/node_modules
            apps/*/node_modules
          key: ${{ steps.deps-cache-key.outputs.key }}
          restore-keys: |
            deps-${{ runner.os }}-bun-${{ env.BUN_VERSION }}-
            deps-${{ runner.os }}-bun-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: bun install --frozen-lockfile

      - name: Cache Turbo
        uses: actions/cache@v4
        with:
          path: .turbo
          key: turbo-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ runner.os }}-

  # Parallel quality checks
  quality:
    name: Quality Checks
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        task:
          - { name: "Lint", cmd: "npx ultracite lint" }
          - { name: "Type Check", cmd: "bun run typecheck" }
          - { name: "Format Check", cmd: "bun run format:check" }
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Restore dependencies
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
            packages/*/node_modules
            apps/*/node_modules
          key: ${{ needs.setup.outputs.deps-cache-key }}
          fail-on-cache-miss: true

      - name: Restore Turbo cache
        uses: actions/cache/restore@v4
        with:
          path: .turbo
          key: turbo-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ runner.os }}-

      - name: Run ${{ matrix.task.name }}
        run: ${{ matrix.task.cmd }}
        continue-on-error: true

  test:
    name: Test
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Restore dependencies
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
            packages/*/node_modules
            apps/*/node_modules
          key: ${{ needs.setup.outputs.deps-cache-key }}
          fail-on-cache-miss: true

      - name: Restore Turbo cache
        uses: actions/cache/restore@v4
        with:
          path: .turbo
          key: turbo-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ runner.os }}-

      - name: Run tests with coverage
        run: bun run test:ci
        env:
          CI: true

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-${{ github.sha }}
          path: coverage/
          retention-days: 7
          compression-level: 9

  build:
    name: Build
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Restore dependencies
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
            packages/*/node_modules
            apps/*/node_modules
          key: ${{ needs.setup.outputs.deps-cache-key }}
          fail-on-cache-miss: true

      - name: Restore Turbo cache
        uses: actions/cache/restore@v4
        with:
          path: .turbo
          key: turbo-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ runner.os }}-

      - name: Build packages with Turbo
        run: bun run build
        env:
          TURBO_TELEMETRY_DISABLED: 1

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: |
            packages/*/dist
            apps/*/dist
            apps/*/.next
          key: build-${{ runner.os }}-${{ github.sha }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ github.sha }}
          path: |
            packages/*/dist/
            apps/*/dist/
          retention-days: 7
          compression-level: 9

  validate:
    name: Validate
    needs: [setup, build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Restore dependencies
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
            packages/*/node_modules
            apps/*/node_modules
          key: ${{ needs.setup.outputs.deps-cache-key }}
          fail-on-cache-miss: true

      - name: Restore build artifacts
        uses: actions/cache/restore@v4
        with:
          path: |
            packages/*/dist
            apps/*/dist
            apps/*/.next
          key: build-${{ runner.os }}-${{ github.sha }}
          fail-on-cache-miss: true

      - name: Validate package.json consistency
        run: bun run syncpack:check

      - name: Check for circular dependencies
        run: bun x madge --circular --extensions ts,tsx packages/

      - name: Validate package exports
        run: bun run lint:packages || true

  security:
    name: Security
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Run Bun audit
        run: bun audit --level=moderate
        continue-on-error: true

      - name: Run TruffleHog secret scan
        uses: trufflesecurity/trufflehog@v3.81.10
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript-typescript
          queries: security-extended

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  # Dependency review for PRs only
  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.pull_request.base.repo.private == false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          deny-licenses: GPL-3.0, AGPL-3.0
          comment-summary-in-pr: always

  # Final status check
  ci-status:
    name: CI Status
    runs-on: ubuntu-latest
    needs: [quality, test, build, validate, security]
    if: always()
    steps:
      - name: Check job statuses
        run: |
          if [[ "${{ contains(needs.*.result, 'failure') }}" == "true" ]]; then
            echo "❌ One or more CI checks failed"
            exit 1
          elif [[ "${{ contains(needs.*.result, 'cancelled') }}" == "true" ]]; then
            echo "⚠️ One or more CI checks were cancelled"
            exit 1
          else
            echo "✅ All CI checks passed successfully"
          fi
